- name: 'Check OS version'
  assert:
    that: 
    - ansible_distribution == 'Ubuntu'

- name: 'Check OS release'
  assert:
    that: 
    - ansible_distribution_version == '20.04'


- name: Disable IPv6 with sysctl
  sysctl: name={{ item }} value=1 state=present reload=yes
  with_items:
    - net.ipv6.conf.all.disable_ipv6
    - net.ipv6.conf.default.disable_ipv6
    - net.ipv6.conf.lo.disable_ipv6
  when: disable_ipv6
  notify: reboot

- name: Harden network
  sysctl: name={{ item.name }} value={{ item.value }} state=present reload=yes
  with_items:
  - { name: "net.ipv4.conf.default.rp_filter", value: 1}
  - { name: "net.ipv4.conf.all.rp_filter", value: 1}
  - { name: "net.ipv4.tcp_syncookies", value: 1}
  - { name: "net.ipv4.conf.all.accept_redirects", value: 0}
  - { name: "net.ipv4.conf.all.send_redirects", value: 0}
  - { name: "net.ipv4.conf.all.accept_source_route", value: 0}
  - { name: "net.ipv4.conf.all.log_martians", value: 1}
  when: harden_network
  notify: reboot

- name: Harden network ipv6
  sysctl: name={{ item.name }} value={{ item.value }} state=present reload=yes
  with_items:
  - { name: "net.ipv6.conf.all.accept_redirects", value: 0}
  - { name: "net.ipv6.conf.all.accept_source_route", value: 0}
  when: harden_network and not disable_ipv6
  notify: reboot

- name: Disable a timer unit for dnf-automatic
  ansible.builtin.systemd:
    name: motd-news.timer
    state: stopped
    enabled: no

- name: swapfile
  block:

  - name: Set swap_file variable
    set_fact:
      swap_file: "{{swap_file_path}}"

  - name: Check if swap file exists
    stat:
      path: "{{swap_file}}"
    register: swap_file_check

  - name: Disable old swap
    command: swapoff {{swap_file}}
    when: swap_file_check.stat.exists and ansible_swaptotal_mb > 0

  - name: Create swap file
    command: fallocate -l {{swap_file_size}} {{swap_file}}
    when: not swap_file_check.stat.exists

  - name: Change swap file permissions
    file: path="{{swap_file}}"
          owner=root
          group=root
          mode=0600

  - name: Format swap file
    become: yes
    command: "mkswap {{swap_file}}"
    when: not swap_file_check.stat.exists

  - name: Write swap entry in fstab
    mount: name=none
          src={{swap_file}}
          fstype=swap
          opts=sw
          passno=0
          dump=0
          state=present

  - name: Turn on swap
    become: yes
    command: swapon -a
    when: not swap_file_check.stat.exists

  - name: Set swappiness
    become: yes
    sysctl:
      name: vm.swappiness
      value: "{{swappiness}}"

  when: use_swap